<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classIDoxygen" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>IDoxygen</compoundname>
    <includes local="no">doxmlintf.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classIDoxygen_1acdee4e3efe347f2d97363fdf80609e6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classICompoundIterator" kindref="compound">ICompoundIterator</ref> *</type>
        <definition>virtual ICompoundIterator* IDoxygen::compounds</definition>
        <argsstring>() const =0</argsstring>
        <name>compounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an iterator that can be used to iterate over the list of compounds found in the project. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="doxmlintf.h" line="1089" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classIDoxygen_1aec9e0df2a3c6a8085358ff0f07c52c55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classICompound" kindref="compound">ICompound</ref> *</type>
        <definition>virtual ICompound* IDoxygen::compoundById</definition>
        <argsstring>(const char *id) const =0</argsstring>
        <name>compoundById</name>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a compound given its unique <emphasis>id</emphasis>. If you have a compound id this function is much more efficient than iterating over the compound list. Returns 0 if the id is not valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="doxmlintf.h" line="1095" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classIDoxygen_1a8da2fb55aad2aa941b2c529a5f1361aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classICompound" kindref="compound">ICompound</ref> *</type>
        <definition>virtual ICompound* IDoxygen::compoundByName</definition>
        <argsstring>(const char *name) const =0</argsstring>
        <name>compoundByName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a compound given its name (including the scope). Returns 0 if the name is not found in the project. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="doxmlintf.h" line="1100" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classIDoxygen_1ac7544d8d1dd53c3a8d1e180d81bca0e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classICompound" kindref="compound">ICompound</ref> *</type>
        <definition>virtual ICompound* IDoxygen::memberById</definition>
        <argsstring>(const char *id) const =0</argsstring>
        <name>memberById</name>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an interface to a compound containing a member given it the member&apos;s id. Given the <ref refid="classICompound" kindref="compound">ICompound</ref> interface one can use the same id to obtain the <ref refid="classIMember" kindref="compound">IMember</ref> interface. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The member id. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="doxmlintf.h" line="1107" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classIDoxygen_1a1895a0347469d6e4788da0beca0e071c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classICompoundIterator" kindref="compound">ICompoundIterator</ref> *</type>
        <definition>virtual ICompoundIterator* IDoxygen::memberByName</definition>
        <argsstring>(const char *name) const =0</argsstring>
        <name>memberByName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a list of all compounds containing at least one members with a certain name. Each compound can be asked to return the list of members with that name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the member. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="doxmlintf.h" line="1114" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classIDoxygen_1a6865961012ad8e6c19b7575488046045" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void IDoxygen::release</definition>
        <argsstring>()=0</argsstring>
        <name>release</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Releases the memory for the object hierarchy obtained by createdObjectModel(). First release all iterators before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="doxmlintf.h" line="1120" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classIDoxygen_1ae8e3759ffc6d64684dc500855f6fead6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void IDoxygen::setDebugLevel</definition>
        <argsstring>(int level)=0</argsstring>
        <name>setDebugLevel</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the debug level.<itemizedlist>
<listitem><para>0 all debugging messages are disabled (the default).</para>
</listitem><listitem><para>1 display important messages only</para>
</listitem><listitem><para>2 display any messages. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="doxmlintf.h" line="1127" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classIDoxygen_1a7959d93fba77caddee37b6d8370c10f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool IDoxygen::readXMLDir</definition>
        <argsstring>(const char *xmlDirName)=0</argsstring>
        <name>readXMLDir</name>
        <param>
          <type>const char *</type>
          <declname>xmlDirName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads an XML directory produced by doxygen and builds up a data structure representing the contents of the XML files in the directory. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="doxmlintf.h" line="1132" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Root node of the object model. </para>
    </detaileddescription>
    <location file="doxmlintf.h" line="1081" column="1" bodyfile="doxmlintf.h" bodystart="1082" bodyend="1133"/>
    <listofallmembers>
      <member refid="classIDoxygen_1aec9e0df2a3c6a8085358ff0f07c52c55" prot="public" virt="pure-virtual"><scope>IDoxygen</scope><name>compoundById</name></member>
      <member refid="classIDoxygen_1a8da2fb55aad2aa941b2c529a5f1361aa" prot="public" virt="pure-virtual"><scope>IDoxygen</scope><name>compoundByName</name></member>
      <member refid="classIDoxygen_1acdee4e3efe347f2d97363fdf80609e6e" prot="public" virt="pure-virtual"><scope>IDoxygen</scope><name>compounds</name></member>
      <member refid="classIDoxygen_1ac7544d8d1dd53c3a8d1e180d81bca0e9" prot="public" virt="pure-virtual"><scope>IDoxygen</scope><name>memberById</name></member>
      <member refid="classIDoxygen_1a1895a0347469d6e4788da0beca0e071c" prot="public" virt="pure-virtual"><scope>IDoxygen</scope><name>memberByName</name></member>
      <member refid="classIDoxygen_1a7959d93fba77caddee37b6d8370c10f0" prot="public" virt="pure-virtual"><scope>IDoxygen</scope><name>readXMLDir</name></member>
      <member refid="classIDoxygen_1a6865961012ad8e6c19b7575488046045" prot="public" virt="pure-virtual"><scope>IDoxygen</scope><name>release</name></member>
      <member refid="classIDoxygen_1ae8e3759ffc6d64684dc500855f6fead6" prot="public" virt="pure-virtual"><scope>IDoxygen</scope><name>setDebugLevel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
